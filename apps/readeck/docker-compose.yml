version: "3.9"
services:
  readeck: # Should be exact same name as "id" field in config.json
    container_name: readeck # Should be exact same name as "id" field in config.json
    image: codeberg.org/readeck/readeck:0.19.2 # Try to avoid "latest" tag. As it may break configs in the future.
    restart: unless-stopped # Do not change this
    environment:
      - READECK_LOG_LEVEL=debug
      - READECK_SERVER_HOST=0.0.0.0
      - READECK_SERVER_PORT=8000
      - READECK_ALLOWED_HOSTS=${APP_DOMAIN},192.168.0.20
      - READECK_TRUSTED_PROXIES=127.0.0.0/8
      - READECK_USE_X_FORWARDED=true 
    volumes:
      - ${APP_DATA_DIR}/data/readeck:/readeck # Always start the path with ${APP_DATA_DIR}/data/. This will put all data inside app-data/my-app/data
    ports:
      - ${APP_PORT}:8000
    healthcheck:
      test: ["CMD", "/bin/readeck", "healthcheck", "-config", "config.toml"]
      interval: 30s
      timeout: 2s
      retries: 3
    networks:
      - tipi_main_network # That should not be changed
    labels: # Use your editors search and replace feature to replace all instances of "wallabag" with your app name in the traefik labels
      # Main
      traefik.enable: true
      traefik.http.middlewares.readeck-web-redirect.redirectscheme.scheme: https
      traefik.http.services.readeck.loadbalancer.server.port: 8000 # Should be the same as the app internal port so for this example 9443
      # Web
      traefik.http.routers.readeck-insecure.rule: Host(`${APP_DOMAIN}`)
      traefik.http.routers.readeck-insecure.entrypoints: web
      traefik.http.routers.readeck-insecure.service: readeck
      traefik.http.routers.readeck-insecure.middlewares: readeck-web-redirect
      # Websecure
      traefik.http.routers.readeck.rule: Host(`${APP_DOMAIN}`)
      traefik.http.routers.readeck.entrypoints: websecure
      traefik.http.routers.readeck.service: readeck
      traefik.http.routers.readeck.tls.certresolver: myresolver
      # Local domain
      traefik.http.routers.readeck-local-insecure.rule: Host(`readeck.${LOCAL_DOMAIN}`)
      traefik.http.routers.readeck-local-insecure.entrypoints: web
      traefik.http.routers.readeck-local-insecure.service: readeck
      traefik.http.routers.readeck-local-insecure.middlewares: readeck-web-redirect
      # Local domain secure
      traefik.http.routers.readeck-local.rule: Host(`readeck.${LOCAL_DOMAIN}`)
      traefik.http.routers.readeck-local.entrypoints: websecure
      traefik.http.routers.readeck-local.service: readeck
      traefik.http.routers.readeck-local.tls: true
      runtipi.managed: true
